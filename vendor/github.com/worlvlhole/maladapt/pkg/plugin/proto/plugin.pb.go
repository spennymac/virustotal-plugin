// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Digest struct {
	Algorithm            string   `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Digest) Reset()         { *m = Digest{} }
func (m *Digest) String() string { return proto.CompactTextString(m) }
func (*Digest) ProtoMessage()    {}
func (*Digest) Descriptor() ([]byte, []int) {
	return fileDescriptor_plugin_0b098cad807ab7cb, []int{0}
}
func (m *Digest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Digest.Unmarshal(m, b)
}
func (m *Digest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Digest.Marshal(b, m, deterministic)
}
func (dst *Digest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Digest.Merge(dst, src)
}
func (m *Digest) XXX_Size() int {
	return xxx_messageInfo_Digest.Size(m)
}
func (m *Digest) XXX_DiscardUnknown() {
	xxx_messageInfo_Digest.DiscardUnknown(m)
}

var xxx_messageInfo_Digest proto.InternalMessageInfo

func (m *Digest) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *Digest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type ScanRequest struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename             string    `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Location             string    `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Digests              []*Digest `protobuf:"bytes,4,rep,name=digests,proto3" json:"digests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_plugin_0b098cad807ab7cb, []int{1}
}
func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (dst *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(dst, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

func (m *ScanRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ScanRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *ScanRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *ScanRequest) GetDigests() []*Digest {
	if m != nil {
		return m.Digests
	}
	return nil
}

type ScanResponse struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Type                 string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Details              *any.Any             `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ScanResponse) Reset()         { *m = ScanResponse{} }
func (m *ScanResponse) String() string { return proto.CompactTextString(m) }
func (*ScanResponse) ProtoMessage()    {}
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_plugin_0b098cad807ab7cb, []int{2}
}
func (m *ScanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanResponse.Unmarshal(m, b)
}
func (m *ScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanResponse.Marshal(b, m, deterministic)
}
func (dst *ScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanResponse.Merge(dst, src)
}
func (m *ScanResponse) XXX_Size() int {
	return xxx_messageInfo_ScanResponse.Size(m)
}
func (m *ScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScanResponse proto.InternalMessageInfo

func (m *ScanResponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ScanResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ScanResponse) GetDetails() *any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterType((*Digest)(nil), "proto.Digest")
	proto.RegisterType((*ScanRequest)(nil), "proto.ScanRequest")
	proto.RegisterType((*ScanResponse)(nil), "proto.ScanResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PluginClient is the client API for Plugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PluginClient interface {
	Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error)
}

type pluginClient struct {
	cc *grpc.ClientConn
}

func NewPluginClient(cc *grpc.ClientConn) PluginClient {
	return &pluginClient{cc}
}

func (c *pluginClient) Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error) {
	out := new(ScanResponse)
	err := c.cc.Invoke(ctx, "/proto.Plugin/Scan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PluginServer is the server API for Plugin service.
type PluginServer interface {
	Scan(context.Context, *ScanRequest) (*ScanResponse, error)
}

func RegisterPluginServer(s *grpc.Server, srv PluginServer) {
	s.RegisterService(&_Plugin_serviceDesc, srv)
}

func _Plugin_Scan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).Scan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/Scan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).Scan(ctx, req.(*ScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Plugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Plugin",
	HandlerType: (*PluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Scan",
			Handler:    _Plugin_Scan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plugin.proto",
}

func init() { proto.RegisterFile("plugin.proto", fileDescriptor_plugin_0b098cad807ab7cb) }

var fileDescriptor_plugin_0b098cad807ab7cb = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4e, 0x84, 0x30,
	0x10, 0xc6, 0xc3, 0x2e, 0xb2, 0x32, 0xa0, 0x87, 0xea, 0x01, 0x89, 0x89, 0x84, 0x8b, 0x9c, 0x4a,
	0x82, 0x27, 0xbd, 0x99, 0xf8, 0x00, 0xa6, 0xfa, 0x02, 0xdd, 0xa5, 0x0b, 0x4d, 0x4a, 0x8b, 0xdb,
	0x72, 0xe0, 0xe2, 0xc1, 0x27, 0x37, 0xb4, 0x5b, 0xff, 0x9e, 0xe8, 0xcc, 0xf7, 0xcd, 0xe4, 0xf7,
	0x0d, 0x90, 0x8e, 0x62, 0xea, 0xb8, 0xc4, 0xe3, 0x41, 0x19, 0x85, 0x4e, 0xec, 0x27, 0xbf, 0xe9,
	0x94, 0xea, 0x04, 0xab, 0x6d, 0xb5, 0x9d, 0xf6, 0xb5, 0xe1, 0x03, 0xd3, 0x86, 0x0e, 0xa3, 0xf3,
	0xe5, 0x57, 0x7f, 0x0d, 0x54, 0xce, 0x4e, 0x2a, 0x1f, 0x20, 0x7a, 0xe2, 0x1d, 0xd3, 0x06, 0x5d,
	0x43, 0x4c, 0x45, 0xa7, 0x0e, 0xdc, 0xf4, 0x43, 0x16, 0x14, 0x41, 0x15, 0x93, 0xef, 0x06, 0x42,
	0x10, 0xf6, 0x54, 0xf7, 0xd9, 0xaa, 0x08, 0xaa, 0x94, 0xd8, 0x77, 0xf9, 0x0e, 0xc9, 0xcb, 0x8e,
	0x4a, 0xc2, 0xde, 0xa6, 0x65, 0xc1, 0x39, 0xac, 0x78, 0x7b, 0x9c, 0x5c, 0xf1, 0x16, 0xe5, 0x70,
	0xba, 0xe7, 0x82, 0x49, 0x3a, 0x30, 0x3b, 0x16, 0x93, 0xaf, 0x7a, 0xd1, 0x84, 0xda, 0x51, 0xc3,
	0x95, 0xcc, 0xd6, 0x4e, 0xf3, 0x35, 0xba, 0x85, 0x4d, 0x6b, 0x91, 0x74, 0x16, 0x16, 0xeb, 0x2a,
	0x69, 0xce, 0x1c, 0x2b, 0x76, 0xa0, 0xc4, 0xab, 0xe5, 0x47, 0x00, 0xa9, 0x03, 0xd0, 0xa3, 0x92,
	0x9a, 0x21, 0x0c, 0xe1, 0x12, 0xdd, 0x32, 0x24, 0x4d, 0x8e, 0x5d, 0x6c, 0xec, 0x63, 0xe3, 0x57,
	0x7f, 0x17, 0x62, 0x7d, 0x4b, 0x28, 0x33, 0x8f, 0x9e, 0xce, 0xbe, 0x11, 0x86, 0x4d, 0xcb, 0x0c,
	0xe5, 0x42, 0x5b, 0xb0, 0xa4, 0xb9, 0xfc, 0xb7, 0xe6, 0x51, 0xce, 0xc4, 0x9b, 0x9a, 0x7b, 0x88,
	0x9e, 0xed, 0x3f, 0x41, 0x35, 0x84, 0x0b, 0x0d, 0x42, 0x47, 0xdc, 0x1f, 0xb7, 0xc9, 0x2f, 0x7e,
	0xf5, 0x1c, 0xee, 0x36, 0xb2, 0xbd, 0xbb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x73, 0x8f, 0xd3,
	0xa6, 0xd5, 0x01, 0x00, 0x00,
}
